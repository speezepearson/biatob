syntax = "proto3";

package biatob.proto.mvp;

message UserId {
  oneof kind {
    string username = 1;
    // string oauth_google_acct = 2;
    // string oauth_facebook_acct = 3;
  }
}

message AuthToken {
  bytes hmac_of_rest = 1;
  UserId owner_depr = 2;
  string owner = 7;
  double minted_unixtime = 5;
  double expires_unixtime = 6;

}

message CredentialsConfig {
  SmtpCredentials smtp = 1;
  bytes token_signing_secret = 2;
  message SmtpCredentials {
    string hostname = 1;
    uint32 port = 2;
    string username = 3;
    string password = 4;
    string from_addr = 5;
  }
}

message Invitation {
  double created_unixtime = 6;
  string notes = 3;
  UserId accepted_by_depr = 4;
  string accepted_by = 8;
  double accepted_unixtime = 7;
}

message EmailFlowState {
  oneof email_flow_state_kind {
    Void unstarted = 1;
    CodeSent code_sent = 2;
    string verified = 3;
  }
  message CodeSent {
    string email = 1;
    HashedPassword code = 2;
  }
}

message HashedPassword {
  bytes salt = 1;
  bytes scrypt = 2;
}

message GenericUserInfo {
  repeated UserId trusted_users_depr = 1;
  EmailFlowState email = 2;
  bool email_reminders_to_resolve = 3;
  bool email_resolution_notifications = 4;
  map<string, Invitation> invitations = 5;
  map<string, Relationship> relationships = 6;

  oneof login_type {
    HashedPassword login_password = 7;
  }
}
message Relationship {
  bool trusts_you = 1;
  bool trusted_by_you = 2;
}

message UsernameInfo {
  GenericUserInfo info = 1;
  HashedPassword password = 2;
}

message EmailAttempt {
  double unixtime = 1;
  bool succeeded = 2;
}

message ResolutionEvent {
  double unixtime = 4;
  Resolution resolution = 2;
  string notes = 3;
}

message Trade {
  UserId bettor_depr = 1;
  string bettor = 7;
  bool bettor_is_a_skeptic = 2;
  uint32 bettor_stake_cents = 3;
  uint32 creator_stake_cents = 4;
  double transacted_unixtime = 6;
}


enum Void {
  VOID = 0;
}

enum Resolution {
  RESOLUTION_NONE_YET = 0;
  RESOLUTION_YES = 1;
  RESOLUTION_NO = 2;
  RESOLUTION_INVALID = 3;
}

message WhoamiRequest {}
message WhoamiResponse {
  AuthToken auth = 1;
}

message SignOutRequest {}
message SignOutResponse {}

message AuthSuccess {
  AuthToken token = 1;
  GenericUserInfo user_info = 2;
}

message RegisterUsernameRequest {
  string username = 1;
  string password = 2;
}
message RegisterUsernameResponse {
  oneof register_username_result {
    AuthSuccess ok = 1;
    Error error = 2;
  }
  message Error {
    string catchall = 1;
    Void username_taken = 2;
  }
}

message LogInUsernameRequest {
  string username = 1;
  string password = 2;
}
message LogInUsernameResponse {
  oneof log_in_username_result {
    AuthSuccess ok = 1;
    Error error = 2;
  }
  message Error {
    string catchall = 1;
  }
}

message CertaintyRange {
  float low = 1;
  float high = 2;
}
message CreatePredictionRequest {
  string prediction = 2;
  // PredictionPrivacy privacy = 3;
  CertaintyRange certainty = 4;
  uint32 maximum_stake_cents = 5;
  uint32 open_seconds = 6;
  string special_rules = 7;
  double resolves_at_unixtime = 9;
}
message CreatePredictionResponse {
  oneof create_prediction_result {
    string new_prediction_id = 1;
    Error error = 2;
  }
  message Error {
    string catchall = 1;
  }
}

message GetPredictionRequest {
  string prediction_id = 2;
}
message GetPredictionResponse {
  oneof get_prediction_result {
    UserPredictionView prediction = 1;
    Error error = 2;
  }
  message Error {
    string catchall = 1;
    Void no_such_prediction = 2;
  }
}
message UserPredictionView {
  string prediction = 1;
  CertaintyRange certainty = 2;
  uint32 maximum_stake_cents = 3;
  uint32 remaining_stake_cents_vs_believers = 4;
  uint32 remaining_stake_cents_vs_skeptics = 5;
  double created_unixtime = 13;
  double closes_unixtime = 14;
  string special_rules = 8;
  string creator = 9;
  repeated ResolutionEvent resolutions = 10;
  repeated Trade your_trades = 11;
  double resolves_at_unixtime = 15;
}

message ListMyStakesRequest {
}
message ListMyStakesResponse {
  oneof list_my_stakes_result {
    PredictionsById ok = 1;
    Error error = 2;
  }
  message Error {
    string catchall = 1;
  }
}
message PredictionsById {
  map<string, UserPredictionView> predictions = 1;
}

message ListPredictionsRequest {
  UserId creator_depr = 1;
  string creator = 2;
}
message ListPredictionsResponse {
  oneof list_predictions_result {
    PredictionsById ok = 1;
    Error error = 2;
  }
  message Error {
    string catchall = 1;
  }
}

message StakeRequest {
  string prediction_id = 2;
  bool bettor_is_a_skeptic = 3;
  uint32 bettor_stake_cents = 4;
}
message StakeResponse {
  oneof stake_result {
    UserPredictionView ok = 1;
    Error error = 2;
  }
  message Error {
    string catchall = 1;
  }
}

message ResolveRequest {
  string prediction_id = 1;
  Resolution resolution = 2;
  string notes = 3;
}
message ResolveResponse {
  oneof resolve_result {
    UserPredictionView ok = 1;
    Error error = 2;
  }
  message Error {
    string catchall = 1;
  }
}

message SetTrustedRequest {
  UserId who_depr = 1;
  string who = 3;
  bool trusted = 2;
}
message SetTrustedResponse {
  oneof set_trusted_result {
    GenericUserInfo ok = 1;
    Error error = 2;
  }
  message Error {
    string catchall = 1;
  }
}

message GetUserRequest {
  UserId who_depr = 1;
  string who = 2;
}
message GetUserResponse {
  oneof get_user_result {
    Relationship ok = 1;
    Error error = 2;
  }
  message Error {
    string catchall = 1;
  }
}

message ChangePasswordRequest {
  string old_password = 1;
  string new_password = 2;
}
message ChangePasswordResponse {
  oneof change_password_result {
    Void ok = 1;
    Error error = 2;
  }
  message Error {
    string catchall = 1;
  }
}

message SetEmailRequest {
  string email = 1;
}
message SetEmailResponse {
  oneof set_email_result {
    EmailFlowState ok = 1;
    Error error = 2;
  }
  message Error {
    string catchall = 1;
  }
}

message VerifyEmailRequest {
  string code = 1;
}
message VerifyEmailResponse {
  oneof verify_email_result {
    EmailFlowState ok = 1;
    Error error = 2;
  }
  message Error {
    string catchall = 1;
  }
}

message GetSettingsRequest {
}
message GetSettingsResponse {
  oneof get_settings_result {
    GenericUserInfo ok = 1;
    Error error = 2;
  }
  message Error {
    string catchall = 1;
  }
}

message MaybeBool { bool value = 1; }
message UpdateSettingsRequest {
  MaybeBool email_reminders_to_resolve = 1;
  MaybeBool email_resolution_notifications = 2;
}
message UpdateSettingsResponse {
  oneof update_settings_result {
    GenericUserInfo ok = 1;
    Error error = 2;
  }
  message Error {
    string catchall = 1;
  }
}

message CreateInvitationRequest {
  string notes = 1;
}
message CreateInvitationResponse {
  oneof create_invitation_result {
    Result ok = 1;
    Error error = 2;
  }
  message Result {
    string nonce = 1;
    GenericUserInfo user_info = 3;
  }
  message Error {
    string catchall = 1;
  }
}

message CheckInvitationRequest {
  string nonce = 1;
}
message CheckInvitationResponse {
  oneof check_invitation_result {
    Result ok = 1;
    Error error = 2;
  }
  message Result {
    bool is_open = 1;
    string inviter = 2;
  }
  message Error {
    string catchall = 1;
  }
}

message AcceptInvitationRequest {
  string nonce = 1;
}
message AcceptInvitationResponse {
  oneof accept_invitation_result {
    GenericUserInfo ok = 1;
    Error error = 2;
  }
  message Error {
    string catchall = 1;
  }
}
